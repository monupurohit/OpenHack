# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kvname-user-msi
  namespace: api
spec:
  provider: azure
  secretObjects:
  - secretName: aks-secret # name given to our kubernetes secret
    type: Opaque
    data:
    - objectName: sqlcredential # must match objectName below
      key: sqlcredential # this can be called what you want, this is to reference this object.
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"           # Set to true for using managed identity
    userAssignedIdentityID: "f243604b-4534-43ac-8f99-40c8bcef8f17"   # Set the clientID of the user-assigned managed identity to use
    keyvaultName: "RBAC-Cluster-RG-KeyVault"        # Set to the name of your key vault
    cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: sqlcredential
          objectType: secret              # object types: secret, key, or cert
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
    tenantId: "2609c91d-d14a-4acc-8291-9a51b74e5869"                 # The tenant ID of the key vault